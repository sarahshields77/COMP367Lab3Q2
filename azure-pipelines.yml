trigger:
- main

pool:
  name: MySelfHostedAgentPool

variables:
  buildConfiguration: 'Release'
  solution: 'MvcMovie.sln'  
  projectPath: 'MvcMovie/MvcMovie.csproj'  
  artifactName: 'drop'

stages:
- stage: Build
  displayName: Build the Application
  jobs:
  - job: Build
    displayName: Build Job
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8.0'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        projects: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Web App'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: CmdLine@2
      displayName: 'List Files in Staging Directory'
      inputs:
        script: |
          echo 'Contents of $(Build.ArtifactStagingDirectory):'
          dir "$(Build.ArtifactStagingDirectory)" /s
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: $(artifactName)'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(artifactName)'
        publishLocation: 'Container'
      condition: always()

- stage: Deploy
  displayName: Deploy to Local Machine
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy Job
    environment: 'LocalMachine'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(artifactName)'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: ExtractFiles@1
            displayName: 'Extract Publish Artifact'
            inputs:
              archiveFilePatterns: '$(System.ArtifactsDirectory)/$(artifactName)/*.zip'
              destinationFolder: '$(System.DefaultWorkingDirectory)/publish'
              cleanDestinationFolder: true

          - task: PowerShell@2
            displayName: 'Deploy to IIS (PowerShell Script)'
            inputs:
              targetType: 'inline'
              script: |
                # Remove existing files
                Remove-Item -Recurse -Force "C:\inetpub\wwwroot\*" -ErrorAction SilentlyContinue

                # Copy the published files to IIS root
                Copy-Item -Path "$(System.DefaultWorkingDirectory)/publish/*" -Destination "C:\inetpub\wwwroot" -Recurse -Force
